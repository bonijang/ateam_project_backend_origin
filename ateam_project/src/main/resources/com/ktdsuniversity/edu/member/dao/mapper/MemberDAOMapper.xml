<!-- 수정자: 김태현(2023-10-29)
	 수정자: 김태현(2023-10-31)
	 내용:  -->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ktdsuniversity.edu.member.dao.MemberDAO">
	<!-- 일반 타입 회원 조회용 조인 -->
	<resultMap type="com.ktdsuniversity.edu.member.vo.MemberVO" 
			   id="GeneralMemberTierMap"
			   autoMapping="true">
		<association property="generalMemberVO"
					 javaType="com.ktdsuniversity.edu.generalmember.vo.GeneralMemberVO"
					 autoMapping="true">
			<id column="GENERAL_MEMBER_EMAIL" property="generalMemberEmail"/>
		</association>		   
	</resultMap>
	<!-- 기업 타입 멤버 조회용 조인 -->
	<resultMap type="com.ktdsuniversity.edu.member.vo.MemberVO" 
			   id="CompanyTypeMemberMap"
			   autoMapping="true">
		<association property="companyInfoVO"
					 javaType="com.ktdsuniversity.edu.companyinfo.vo.CompanyInfoVO"
					 autoMapping="true">
			<id column="COMPANY_EMAIL" property="companyEmail"/>
		</association>		   
	</resultMap>

		
	<select id="getEmailCount" parameterType="string">
		SELECT COUNT(1)
		FROM "MEMBER"
		WHERE EMAIL = #{_parameter}
	</select>
	<select id="getNicknameCount" parameterType="string">
		SELECT COUNT(1)
		FROM "MEMBER"
		WHERE NICKNAME = #{_parameter}
	</select>
	
	<insert id="createNewMember"
		parameterType="com.ktdsuniversity.edu.member.vo.MemberVO">
		INSERT INTO "MEMBER"
		( EMAIL
		, PW
		, SALT
		, NICKNAME
		, INFO_AGREEMENT_YN
		, PROFILE_PIC
		, REGIST_DATE
		, MEMBER_TYPE
		, WITHDRAW_YN)
		VALUES
		<if test='memberType == "COMPANY"'>
		( #{companyEmail}
		, #{pw}
		, #{salt}
		, #{nickname}
		</if>
		<if test='memberType == "GENERAL"'>
		( #{email}
		, #{pw}
		, #{salt}
		, #{nickname}
		</if>
		, 'Y'
		, 'https://w7.pngwing.com/pngs/384/868/png-transparent-person-profile-avatar-user-basic-ui-icon.png'
		, SYSDATE
		, #{memberType}
		, 'N' )
	</insert>
	
<!-- 로그인 쿼리 -->
	<select id="getSalt"
			parameterType="string"
			resultType="string">
	SELECT SALT
	  FROM "MEMBER" 
	 WHERE EMAIL =#{_parameter}
	</select>
	
	<select id="getGeneralMember"
			parameterType="com.ktdsuniversity.edu.member.vo.MemberVO"
			resultType="com.ktdsuniversity.edu.member.vo.MemberVO">
		SELECT EMAIL
			 , PW
			 , SALT
			 , NICKNAME
			 , INFO_AGREEMENT_YN
			 , PROFILE_PIC
			 , SYSDATE
			 , MEMBER_TYPE
			 , WITHDRAW_YN
		  FROM "MEMBER"
		 WHERE EMAIL = #{email}
		   AND PW = #{pw}
		   AND (MEMBER_TYPE = 'GENERAL'
		    OR MEMBER_TYPE = 'ADMIN')
	</select>
	
	<select id="getCompanyMember"
			parameterType="com.ktdsuniversity.edu.member.vo.MemberVO"
			resultMap="CompanyTypeMemberMap">
		SELECT EMAIL
			 , PW
			 , SALT
			 , NICKNAME
			 , INFO_AGREEMENT_YN
			 , PROFILE_PIC
			 , SYSDATE
			 , MEMBER_TYPE
			 , WITHDRAW_YN
		  FROM MEMBER M
		 INNER JOIN COMPANY C
		    ON C.COMPANY_EMAIL = M.EMAIL 
		 WHERE EMAIL = #{email}
		   AND PW = #{pw}
		   AND MEMBER_TYPE = 'COMPANY'
		   AND CONFIRM_YN = 'Y'
	</select>
	
	<select id="getOneFile"
	        parameterType="string"
	        resultType="com.ktdsuniversity.edu.member.vo.MemberVO">
		SELECT EMAIL
			 , PROFILE_PIC
			 , REGIST_DATE
		  FROM "MEMBER"
		 WHERE EMAIL = #{_parameter}
	</select>
	
	<select id="searchAllMemberByKeyword"
	        parameterType="com.ktdsuniversity.edu.member.vo.SearchMemberVO"
	        resultType="com.ktdsuniversity.edu.member.vo.MemberVO">
	    SELECT EMAIL
			 , PW
			 , SALT
			 , NICKNAME
			 , INFO_AGREEMENT_YN
			 , PROFILE_PIC
			 , TO_CHAR(REGIST_DATE, 'YYYY-MM-DD HH24:MI:SS') REGIST_DATE
			 , MEMBER_TYPE
			 , WITHDRAW_YN
		  FROM MEMBER
		 WHERE WITHDRAW_YN = 'N'
		<if test='searchKeyword != null and searchKeyword != ""'>
		   AND NICKNAME LIKE '%' || #{searchKeyword} || '%'
		</if>
	</select>
	
	<select id="searchGemeralTypeMemberList"
			resultMap="GeneralMemberTierMap">
		SELECT M.EMAIL
		     , M.NICKNAME 
		     , M.PROFILE_PIC 
		     , GM.TIER_ID 
		  FROM MEMBER M
		 INNER JOIN GENERAL_MEMBER GM
		    ON GM.GENERAL_MEMBER_EMAIL = M.EMAIL
		 WHERE WITHDRAW_YN = 'N'
	</select>
	
	<select id="searchCompanyTypeMemberList"
			resultMap="CompanyTypeMemberMap">
		SELECT M.EMAIL
		     , M.NICKNAME 
		     , M.PROFILE_PIC 
		     , M.WITHDRAW_YN 
		     , C.COMPANY_REGIST_CERTIFICATE_URL 
		     , C.CONFIRM_YN 
		  FROM MEMBER M
		 INNER JOIN COMPANY C
		    ON C.COMPANY_EMAIL = M.EMAIL 
		   AND WITHDRAW_YN = 'N'
	</select>
	
	<update id="updateWithdrawMember"
			parameterType="com.ktdsuniversity.edu.member.vo.MemberVO">
		UPDATE MEMBER
   		   SET WITHDRAW_YN = 'Y'
 		 WHERE EMAIL = #{email}
	</update>
	
	<update id="updateCompanyPassword"
			parameterType="com.ktdsuniversity.edu.member.vo.MemberVO">
		UPDATE MEMBER
   		   SET PW = #{pw}
 		 WHERE EMAIL = #{email}
	</update>
	
	<select id="searchMember"
	        parameterType="string"
	        resultType="com.ktdsuniversity.edu.member.vo.MemberVO">
	   SELECT NICKNAME
		     , MEMBER_TYPE
		  FROM MEMBER
		 WHERE MEMBER_TYPE = #{_parameter}
	</select>
	<select id="selectMemberinfo"
	        parameterType="string"
	        resultType="com.ktdsuniversity.edu.member.vo.MemberVO">
		SELECT EMAIL
			 , PW
			 , SALT
			 , NICKNAME
			 , INFO_AGREEMENT_YN
			 , PROFILE_PIC
			 , REGIST_DATE
			 , MEMBER_TYPE
			 , WITHDRAW_YN
		  FROM "MEMBER"
		 WHERE EMAIL = #{_parameter}
	</select>
	<update id="updateMemberNickname"
			parameterType="com.ktdsuniversity.edu.member.vo.MemberVO">
		UPDATE MEMBER
   		   SET NICKNAME = #{nickname}
 		 WHERE EMAIL = #{email}
	</update>
	<update id="updateMemberPW"
			parameterType="com.ktdsuniversity.edu.member.vo.MemberVO">
		UPDATE MEMBER
   		   SET PW = #{pw}
 		 WHERE EMAIL = #{email}
	</update>
	
	<update id="updateOneFile"
		parameterType="com.ktdsuniversity.edu.member.vo.MemberVO">
		UPDATE "MEMBER"
		   SET 	PROFILE_PIC=#{profilePic}
		 WHERE EMAIL=#{email}
	</update>
	<update id="deleteProfile"
		parameterType="com.ktdsuniversity.edu.member.vo.MemberVO">
		UPDATE "MEMBER"
		   SET 	PROFILE_PIC='https://w7.pngwing.com/pngs/384/868/png-transparent-person-profile-avatar-user-basic-ui-icon.png'
		 WHERE EMAIL=#{email}
	</update>
	    <select id="findkakao"
              resultType="com.ktdsuniversity.edu.member.vo.SocialVO"
              parameterType="java.util.HashMap">
        SELECT SOCIAL_ID
             , SOCAIL_EMAIL
             , SOCIAL_TYPE
             , SOCIAL_NICKNAME
             , DELETE_YN
          FROM SOCIAL
         WHERE SOCAIL_EMAIL = #{email}
           AND SOCIAL_NICKNAME = #{nickname}
    </select>
    <insert id="kakaoinsert"
            parameterType="java.util.HashMap">
        INSERT INTO SOCIAL
        ( SOCIAL_ID
        , SOCAIL_EMAIL
        , SOCIAL_TYPE
        , SOCIAL_NICKNAME
        , DELETE_YN
        , SOCIAL_TOKEN)    
        VALUES
        ( 'SC-' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '-' || LPAD(SEQ_SOCIAL_PK.NEXTVAL, 6, '0')
        , #{email}
        , 'kakao'
        , #{nickname}
        , 'N'
        , #{accessToken})
    </insert>
    <select id="findnaver"
              resultType="com.ktdsuniversity.edu.member.vo.SocialVO"
              parameterType="java.util.HashMap">
        SELECT SOCIAL_ID
             , SOCAIL_EMAIL
             , SOCIAL_TYPE
             , SOCIAL_NICKNAME
             , DELETE_YN
          FROM SOCIAL
         WHERE SOCAIL_EMAIL = #{email}
           AND SOCIAL_NICKNAME = #{nickname}
    </select>
    <insert id="naverinsert"
            parameterType="java.util.HashMap">
        INSERT INTO SOCIAL
        ( SOCIAL_ID
        , SOCAIL_EMAIL
        , SOCIAL_TYPE
        , SOCIAL_NICKNAME
        , DELETE_YN
        , SOCIAL_TOKEN)    
        VALUES
        ( 'SC-' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '-' || LPAD(SEQ_SOCIAL_PK.NEXTVAL, 6, '0')
        , #{email}
        , 'naver'
        , #{nickname}
        , 'N'
        , #{accessToken})
    </insert>
</mapper>